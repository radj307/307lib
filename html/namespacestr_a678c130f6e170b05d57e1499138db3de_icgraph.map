<map id="str::frombool" name="str::frombool">
<area shape="rect" id="node1" title="Converts a bool to string." alt="" coords="552,721,659,747"/>
<area shape="rect" id="node2" href="$structxml_1_1parser_1_1_lexeme_dict.html#a40a7e4824d7fc1d648eae537029dda7e" title="Override this function to select a lexeme type given a single character." alt="" coords="287,5,469,47"/>
<area shape="rect" id="node3" href="$namespacestr.html#acd4ee543bc885f863faf20217f7142fe" title="Compare 2 strings." alt="" coords="326,71,430,98"/>
<area shape="rect" id="node4" href="$namespacestr.html#a041f49f2d8f911fcb5e47ed6ff691ab0" title="Convert a number from base 10 (decimal) to an arbitrary base." alt="" coords="41,479,168,506"/>
<area shape="rect" id="node5" href="$structxml_1_1_x_m_l_element.html#a80cea58c1939bb25c32f6b5838eece35" title="Get this node&#39;s name and namespace/scope as a vector of substrings." alt="" coords="252,173,504,199"/>
<area shape="rect" id="node6" href="$namespacestr.html#a7afb39cb933e8727cfe4a84dbdad41c2" title="Converts a given hexadecimal character to its decimal equivalent." alt="" coords="309,122,447,149"/>
<area shape="rect" id="node8" href="$structopt_1_1_argument_parsing_rules.html#ac2494cee3f10d2aead050f4490219389" title="Checks if the given string is a valid integer, floating&#45;point, or hexadecimal number...." alt="" coords="279,224,477,265"/>
<area shape="rect" id="node10" href="$namespacestr.html#acf8be91baa116c4582e66f6278db959f" title=" " alt="" coords="343,341,413,367"/>
<area shape="rect" id="node11" href="$namespacestr.html#a99874f5b703e388240420d5bec8557a3" title="Check if a given string matches any of a list of strings." alt="" coords="311,391,445,418"/>
<area shape="rect" id="node12" href="$namespacestr.html#a1c5f7adb1945d04eb55b0910ca01d09f" title="Converts string to double. Wrapper for std::stod that can be passed as std::function...." alt="" coords="341,442,415,469"/>
<area shape="rect" id="node13" href="$namespacestr.html#ae47e8a6851499957d48fdef435cd982a" title="Converts string to float. Wrapper for std::stof that can be passed as std::function...." alt="" coords="342,493,414,519"/>
<area shape="rect" id="node14" href="$namespacestr.html#ad15a09e1f1896bc59792a58fe8e1fbe9" title="Converts string to int. Wrapper for std::stoi that can be passed as std::function...." alt="" coords="343,543,413,570"/>
<area shape="rect" id="node15" href="$namespacestr.html#abf4cc36f0f7fbc735d3a7a282b8d9684" title="Converts string to long. Wrapper for std::stol that can be passed as std::function...." alt="" coords="343,594,413,621"/>
<area shape="rect" id="node16" href="$namespacestr.html#af3ddec4fea92d79d63cd6caa33d084e5" title="Converts string to double. Wrapper for std::stod that can be passed as std::function...." alt="" coords="339,645,417,671"/>
<area shape="rect" id="node17" href="$namespacestr.html#a2eb07fec74c9d4fc331166f5c7320aa0" title="Converts string to long long. Wrapper for std::stol that can be passed as std::function...." alt="" coords="341,695,415,722"/>
<area shape="rect" id="node18" href="$namespacestr.html#ae51dc4e9d23dcdd8def538424933d5df" title="Convert a number from an arbitrary base to base 10 (decimal)." alt="" coords="51,721,159,747"/>
<area shape="rect" id="node19" href="$namespacestr.html#a8faa23ca70522123e1c17746265b4c40" title="Converts string to short. Wrapper for std::stoi that can be passed as std::function...." alt="" coords="341,797,415,823"/>
<area shape="rect" id="node20" href="$namespacestr.html#aff81b4fb51f25b185a6e0f219023631b" title="Converts string to unsigned int. Wrapper for static_cast&lt;unsigned&gt;(std::stoi) that can be passed as s..." alt="" coords="339,847,417,874"/>
<area shape="rect" id="node21" href="$namespacestr.html#ad150ce9485904ee33e3593e783324b09" title="Converts string to unsigned long. Wrapper for std::stoul that can be passed as std::function...." alt="" coords="339,898,417,925"/>
<area shape="rect" id="node22" href="$namespacestr.html#a424d7e0db015c773dd069f863c2742e0" title="Converts string to unsigned long. Wrapper for std::stoul that can be passed as std::function...." alt="" coords="337,949,419,975"/>
<area shape="rect" id="node23" href="$namespacestr.html#a9abdc3487fffb1c2b871bf5b609081c8" title="Converts string to unsigned short. Wrapper for static_cast&lt;unsigned short&gt;(std::stoi) that can be pas..." alt="" coords="337,999,419,1026"/>
<area shape="rect" id="node24" href="$namespacestr.html#a18758598172725d265bdab25d48f5836" title="Creates a stringstream, inserts all of the given arguments, then move&#45;returns the resulting stringstr..." alt="" coords="323,1050,433,1077"/>
<area shape="rect" id="node25" href="$namespacestr.html#a31ed6d7d8f4a9a12aaf145f3f4520440" title="Creates a temporary stringstream, inserts all of the given arguments, then returns the result of the ..." alt="" coords="328,1101,428,1127"/>
<area shape="rect" id="node26" href="$namespacestr.html#a8cb7e9cfe504bc154662f277aa75be51" title="Converts a string to bool." alt="" coords="334,1151,422,1178"/>
<area shape="rect" id="node27" href="$namespacestr.html#a93882029690e5c1836bd3c4678da2003" title="Convert a character stored in an int to lowercase." alt="" coords="330,1202,426,1229"/>
<area shape="rect" id="node28" href="$namespacestr.html#a16fb669c01ac6edd91ed062f90069635" title="TOUPPER." alt="" coords="329,1253,427,1279"/>
<area shape="rect" id="node29" href="$namespacestr.html#ae08aac1680da8afe0bb6a06c2b129487" title="Remove preceding &amp; trailing characters from a given string." alt="" coords="341,1303,415,1330"/>
<area shape="rect" id="node30" href="$namespacestr.html#a123ab7e278cfb0f59d3bed690c2bf380" title="Remove preceding characters from a given string_view." alt="" coords="305,1354,451,1381"/>
<area shape="rect" id="node31" href="$namespacestr.html#aac4273bb692df476dc585a89a67f3729" title="Remove trailing characters from a given string." alt="" coords="315,1405,441,1431"/>
<area shape="rect" id="node7" href="$namespacestr.html#a42c6b6a3bd47743a574df997a0bb8c65" title="Convert from hexadecimal to decimal." alt="" coords="35,122,174,149"/>
<area shape="rect" id="node9" href="$structopt_1_1_argument_parsing_rules.html#a979c25e9ad04c66fbdd1e7fa2146d11d" title="Check if the given iterator CAN capture the next argument by checking &#160;&#160;if the next argument is not p..." alt="" coords="5,224,204,265"/>
</map>
