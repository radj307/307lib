# This file was automatically configured by the packaging directory.
# 
# @PACKAGING_TARGET_NAME@/packaging
# src: https://alexreinking.com/blog/building-a-dual-shared-and-static-library-with-cmake.html
cmake_minimum_required(VERSION 3.19)

##### Packaging
include(GNUInstallDirs)				# Adds variables to control the install command. (Platform independant, despite the name)
include(CMakePackageConfigHelpers)	# Adds versioning assistance

# Define the target directory name.
if (NOT DEFINED @PACKAGING_TARGET_NAME@_INSTALL_DIR)
	set(@PACKAGING_TARGET_NAME@_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/@PACKAGING_TARGET_NAME@" CACHE STRING "Path to @PACKAGING_TARGET_NAME@ CMake files")
endif()

##### Install

message(STATUS "Installing @PACKAGING_TARGET_NAME@")
message(STATUS "  INSTALL_DIR: \"${@PACKAGING_TARGET_NAME@_INSTALL_DIR}\"")
message(STATUS "  BINARY_DIR:  \"${@PACKAGING_TARGET_NAME@_BINARY_DIR}\"")

# Install export targets
install(
	TARGETS @PACKAGING_TARGET_NAME@
	EXPORT @PACKAGING_TARGET_NAME@_Targets
	RUNTIME COMPONENT @PACKAGING_TARGET_NAME@_Runtime
	LIBRARY COMPONENT @PACKAGING_TARGET_NAME@_Runtime
	NAMELINK_COMPONENT @PACKAGING_TARGET_NAME@_Development
	ARCHIVE COMPONENT @PACKAGING_TARGET_NAME@_Development
	INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
)

# Install include directories
# To build directory
install(
	DIRECTORY "${@PACKAGING_TARGET_NAME@_SOURCE_DIR}/include/"
	DESTINATION ${@PACKAGING_TARGET_NAME@_BINARY_DIR}
	COMPONENT @PACKAGING_TARGET_NAME@_Development
)
# To installation target
install(
	DIRECTORY "${@PACKAGING_TARGET_NAME@_SOURCE_DIR}/include/"
	TYPE INCLUDE
	COMPONENT @PACKAGING_TARGET_NAME@_Development
)

# Export the target library
install(
	EXPORT @PACKAGING_TARGET_NAME@_Targets
	DESTINATION "${@PACKAGING_TARGET_NAME@_INSTALL_DIR}"
	NAMESPACE 307lib::
	FILE @PACKAGING_TARGET_NAME@-targets.cmake
	COMPONENT @PACKAGING_TARGET_NAME@_Development
)

# Write package versioning config
write_basic_package_version_file(@PACKAGING_TARGET_NAME@ConfigVersion.cmake	COMPATIBILITY SameMajorVersion)

# Export config files so find_package can locate the libraries
install(FILES 
	"${CMAKE_CURRENT_SOURCE_DIR}/@PACKAGING_TARGET_NAME@-config.cmake"
	"${CMAKE_CURRENT_BINARY_DIR}/@PACKAGING_TARGET_NAME@ConfigVersion.cmake"
	DESTINATION "${@PACKAGING_TARGET_NAME@_INSTALL_DIR}"
	COMPONENT @PACKAGING_TARGET_NAME@_Development
)

# Set the @PACKAGING_TARGET_NAME@_ROOT variable
set(@PACKAGING_TARGET_NAME@_ROOT "${@PACKAGING_TARGET_NAME@_INSTALL_DIR}" CACHE STRING "Set the search directory for find_package" FORCE) # Set the find_package search directory